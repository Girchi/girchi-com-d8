<?php

namespace Drupal\girchi_users\Commands;

use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
use Drupal\Component\Plugin\Exception\PluginNotFoundException;
use Drupal\Core\Entity\EntityTypeManagerInterface;
use Drupal\Core\Logger\LoggerChannelFactoryInterface;
use Drupal\Core\Queue\QueueFactory;
use Drupal\girchi_referral\GetUserReferralsService;
use Drupal\girchi_users\Constants\BadgeConstants;
use Drush\Commands\DrushCommands;
use Symfony\Component\Console\Helper\ProgressBar;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * A Drush commandfile.
 *
 * In addition to this file, you need a drush.services.yml
 * in root of your module, and a composer.json file that provides the name
 * of the services file to use.
 *
 * See these files for an example of injecting Drupal services:
 *   - http://cgit.drupalcode.org/devel/tree/src/Commands/DevelCommands.php
 *   - http://cgit.drupalcode.org/devel/tree/drush.services.yml
 */
class GirchiUsersCommands extends DrushCommands {
  /**
   * EntityTypeManagerInterface definition.
   *
   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
   */
  protected $entityTypeManager;

  /**
   * LoggerChannelFactoryInterface definition.
   *
   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
   */
  private $loggerFactory;

  /**
   * QueueFactory.
   *
   * @var \Drupal\Core\Queue\QueueFactory
   */
  protected $queueFactory;

  /**
   * ReferralService.
   *
   * @var \Drupal\girchi_referral\GetUserReferralsService
   */
  protected $referralService;

  /**
   * EntityTypeManager.
   *
   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
   *   EntityManager.
   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerChannelFactory
   *   Logger.
   * @param \Drupal\Core\Queue\QueueFactory $queueFactory
   *   QueueFactory.
   * @param \Drupal\girchi_referral\GetUserReferralsService $referralsService
   *   ReferralService.
   */
  public function __construct(EntityTypeManagerInterface $entityTypeManager,
                              LoggerChannelFactoryInterface $loggerChannelFactory,
                              QueueFactory $queueFactory,
                              GetUserReferralsService $referralsService) {
    parent::__construct();
    $this->entityTypeManager = $entityTypeManager;
    $this->loggerFactory = $loggerChannelFactory;
    $this->queueFactory = $queueFactory;
    $this->referralService = $referralsService;
  }

  /**
   * Main command.
   *
   * @command girchi_users:fix-field-tel
   * @aliases fix-field-tel
   */
  public function fixFieldTel() {
    $user_storage = $this->entityTypeManager->getStorage('user');
    $users_id = $user_storage->getQuery()
      ->condition('field_phone', NULL, 'IS NOT NULL')
      ->execute();
    $users = $user_storage->loadMultiple($users_id);
    foreach ($users as $user) {
      $old_value = $user->get('field_phone')->value;
      $user->get('field_tel')->value = NULL == $user->get('field_tel')->value ? $old_value : $user->get('field_tel')->value;
      $user->save();
    }
  }

  /**
   * Main command.
   *
   * @param \Symfony\Component\Console\Input\InputInterface $input
   *   Input.
   * @param \Symfony\Component\Console\Output\OutputInterface $output
   *   Output.
   *
   * @command girchi_users:publicity
   * @aliases publicity
   */
  public function publicity(InputInterface $input, OutputInterface $output) {
    try {
      $users = $this->entityTypeManager->getStorage('user')->loadMultiple();
      $progress_bar = new ProgressBar($output, count($users));
      $progress_bar->start();
      foreach ($users as $user) {
        $user->set('field_publicity', TRUE);
        $user->save();
        $progress_bar->advance();
      }
      $progress_bar->finish();
    }
    catch (\Exception $e) {
      $this->loggerFactory->get('girchi_users')->error($e->getMessage());
    }
  }

  /**
   * Main command.
   *
   * @command girchi_users:badges
   * @aliases user-badges
   */
  public function userBadges() {
    try {
      $user_storage = $this->entityTypeManager->getStorage('user');
      $uid = $user_storage->getQuery()
        ->condition('uid', '0', '!=')
        ->execute();
      $users = $user_storage->loadMultiple($uid);
      $queue = $this->queueFactory->get('user_badges_queue');

      $donation_storage = $this->entityTypeManager->getStorage('donation');
      $regular_donation_storage = $this->entityTypeManager->getStorage('regular_donation');

      foreach ($users as $user) {
        $term = $this->entityTypeManager->getStorage('taxonomy_term')->loadByProperties(['name' => BadgeConstants::PORTAL_MEMBER]);
        $tid = reset($term)->id();
        $queue->createItem(['uid' => $user->id(), 'tid' => $tid]);

        if ($user->get('field_politician')->value == TRUE) {
          $term = $this->entityTypeManager->getStorage('taxonomy_term')->loadByProperties(['name' => BadgeConstants::POLITICIAN]);
          $tid = reset($term)->id();
          $queue->createItem(['uid' => $user->id(), 'tid' => $tid]);
        }

        $single_donation = $donation_storage->getQuery()
          ->condition('user_id', $user->id(), '=')
          ->condition('field_donation_type', '0', '=')
          ->execute();
        $regular_donation = $regular_donation_storage->getQuery()
          ->condition('user_id', $user->id(), '=')
          ->condition('status', 'ACTIVE', '=')
          ->execute();

        if (!empty($single_donation)) {
          $term = $this->entityTypeManager->getStorage('taxonomy_term')->loadByProperties(['name' => BadgeConstants::SINGLE_CONTRIBUTOR]);
          $tid = reset($term)->id();
          $queue->createItem(['uid' => $user->id(), 'tid' => $tid]);
        }

        if (!empty($regular_donation)) {
          $term = $this->entityTypeManager->getStorage('taxonomy_term')->loadByProperties(['name' => BadgeConstants::REGULAR_CONTRIBUTOR]);
          $tid = reset($term)->id();
          $queue->createItem(['uid' => $user->id(), 'tid' => $tid]);
        }

      }

    }
    catch (InvalidPluginDefinitionException $e) {
      $this->loggerFactory->get('girchi_users')->error($e->getMessage());
    }
    catch (PluginNotFoundException $e) {
      $this->loggerFactory->get('girchi_users')->error($e->getMessage());
    }

  }

  /**
   * Set referral count command.
   *
   * @command girchi_users:set-referral-count
   * @aliases users:set-ref
   */
  public  function setReferralCount() {
    try {
      $referralTree = $this->referralService->getUserReferralTree();
      $users = $this->entityTypeManager->getStorage('user')->loadMultiple(array_keys($referralTree));

      foreach ($users as $user) {
        $user->set('field_referral_count', $referralTree[$user->id()]);
        $user->save();

      }

    }
    catch (\Exception $e) {
      $this->loggerFactory->get('girchi_users')->error($e->getMessage());
    }
  }

  /**
   * Set referral count command.
   *
   * @command girchi_users:del-ref-benefits
   * @aliases del-ref-benefits
   */
  public  function deleteReferralBenefits() {
    try {
      // Delete referral benefits from user field.
      $user_storage = $this->entityTypeManager->getStorage('user');
      $uids = $user_storage->getQuery()
        ->condition('field_referral_benefits', '0', '>')
        ->execute();
      $users = $user_storage->loadMultiple($uids);
      foreach ($users as $user) {
        $user->set('field_referral_benefits', '0');
        $user->save();
      }

      // Delete referral benefits from db.
      $referral_benefits_storage = $this->entityTypeManager->getStorage('node');
      $referral_benefit_ids = $referral_benefits_storage->getQuery()
        ->condition('type', 'referral_transaction')
        ->execute();
      $referral_benefits = $referral_benefits_storage->loadMultiple($referral_benefit_ids);

      foreach ($referral_benefits as $referral_benefit) {
        $referral_benefit->delete();
      }
    }
    catch (\Exception $e) {
      $this->loggerFactory->get('girchi_users')->error($e->getMessage());
    }
  }

  /**
   * Set special transactions.
   *
   * @command girchi_users:special-transactions
   * @aliases special-transactions
   */
  public  function specialTransactions() {
    try {
      $user_storage = $this->entityTypeManager->getStorage('user');
      $queue = $this->queueFactory->get('special_transactions');

      $user_govids = ['09001028230', '09001026676', '09001024248',
        '09001023507', '09001004823', '09001001390', '08373838888',
        '08001036605', '08001036384', '08001034445', '08001034100',
        '08001030668', '08000031655', '06001008114', '06001007910',
        '05901012908', '05001012695', '05001012363', '03001020269',
        '02001025089', '02001022976', '02001003305', '01924099870',
        '01911101837', '01911100009', '01911098129', '01908064128',
        '01901141699', '01901124244', '01901114770', '01901102580',
        '01824092363', '01824092223', '01819090769', '01811098407',
        '01805049019', '01801124382', '01801106948', '01801101990',
        '01724092171', '01724092021', '01708066320', '01701141875',
        '01701135172', '01701102465', '01678740230', '01619090515',
        '01608066527', '01524096507', '01524092426', '01517064729',
        '01511105930', '01432655370', '01424094710', '01424094240',
        '01424093672', '01411102974', '01405045539', '01401133739',
        '01401106549', '01327091471', '01319091796', '01319091526',
        '01317059309', '01311098396', '01308066811', '01301136261',
        '01301107265', '01208064503', '01205046513', '01124092327',
        '01108066480', '01107024811', '01105047648', '01101103800',
        '01095000027', '01036003586', '01036001632', '01036000638',
        '01036000455', '01036000251', '01033003956', '01033003731',
        '01033000138', '01032003260', '01032003259', '01031007191',
        '01031006625', '01031005721', '01031004476', '01031004241',
        '01031001405', '01030052038', '01030048358', '01030048297',
        '01030046525', '01030045643', '01030040981', '01030037488',
        '01030037184', '01030033373', '01030032569', '01030031384',
        '01030031164', '01030030999', '01030029738', '01030017278',
        '01030014637', '01030006707', '01030004313', '01030002972',
        '01030002695', '01030001385', '01030001069', '01029013789',
        '01029012364', '01029012204', '01029008487', '01029007181',
        '01028008205', '01027090642', '01027090331', '01027090181',
        '01027090010', '01027090001', '01027089512', '01027089449',
        '01027089272', '01027088814', '01027088510', '01027086623',
        '01027086488', '01027086434', '01027085686', '01027085429',
        '01027085025', '01027084941', '01027083387', '01027083091',
        '01027083052', '01027082184', '01027081420', '01027081230',
        '01027080937', '01027080389', '01027079939', '01027079903',
        '01027079812', '01027079705', '01027079500', '01027079430',
        '01027079080', '01027078790', '01027078462', '01027077543',
        '01027077145', '01027076985', '01027076764', '01027076514',
        '01027076382', '01027076376', '01027076072', '01027076035',
        '01027075729', '01027075678', '01027075500', '01027074517',
        '01027074306', '01027074170', '01027073161', '01027072398',
        '01027072035', '01027071599', '01027071583', '01027071068',
        '01027070243', '01027069975', '01027069503', '01027069469',
        '01027069255', '01027069047', '01027068741', '01027068648',
        '01027066454', '01027066031', '01027065921', '01027064729',
        '01027063552', '01027062522', '01027060888', '01027059625',
        '01027059442', '01027058786', '01027057999', '01027057858',
        '01027057857', '01027056905', '01027056323', '01027055523',
        '01027052590', '01027051962', '01027051749', '01027051486',
        '01027050884', '01027048470', '01027048006', '01027047880',
        '01027047357', '01027045477', '01027044736', '01027041498',
        '01027035935', '01027034567', '01027034324', '01027031954',
        '01027022447', '01027021071', '01027016796', '01026015641',
        '01026012889', '01026011172', '01026011067', '01026008669',
        '01026006442', '01026005952', '01025020017', '01025017387',
        '01025015635', '01025014241', '01025009761', '01025009699',
        '01025006641', '01025001116', '01024091502', '01024090752',
        '01024090431', '01024089730', '01024089714', '01024089618',
        '01024089384', '01024089211', '01024089140', '01024087658',
        '01024087593', '01024087266', '01024086978', '01024086627',
        '01024086573', '01024086256', '01024086118', '01024085768',
        '01024085359', '01024085188', '01024084440', '01024084095',
        '01024084085', '01024084050', '01024084039', '01024083709',
        '01024083595', '01024083528', '01024083275', '01024082944',
        '01024082879', '01024082458', '01024082243', '01024082240',
        '01024082029', '01024082012', '01024081998', '01024081848',
        '01024081582', '01024081505', '01024081469', '01024081283',
        '01024081167', '01024081165', '01024081135', '01024080459',
        '01024080372', '01024080318', '01024080280', '01024080268',
        '01024079751', '01024079714', '01024079400', '01024079170',
        '01024079169', '01024079112', '01024079095', '01024079040',
        '01024078644', '01024078220', '01024077973', '01024077621',
        '01024077307', '01024076584', '01024076562', '01024076509',
        '01024076466', '01024075858', '01024075818', '01024075769',
        '01024075751', '01024075534', '01024075463', '01024075386',
        '01024075192', '01024074452', '01024074409', '01024074267',
        '01024073713', '01024073649', '01024073449', '01024073381',
        '01024073351', '01024072295', '01024072267', '01024071944',
        '01024071763', '01024071328', '01024071315', '01024070919',
        '01024070791', '01024070748', '01024070594', '01024070365',
        '01024069726', '01024069376', '01024068431', '01024068206',
        '01024067799', '01024067645', '01024066261', '01024065620',
        '01024064814', '01024064760', '01024064525', '01024062636',
        '01024062519', '01024062517', '01024062196', '01024062026',
        '01024061607', '01024061606', '01024061221', '01024059591',
        '01024058850', '01024058379', '01024057868', '01024055592',
        '01024052585', '01024051965', '01024050687', '01024050021',
        '01024044036', '01024042870', '01024040088', '01024040064',
        '01024039784', '01024038359', '01024037969', '01024037933',
        '01024037544', '01024037368', '01024037267', '01024035378',
        '01024032562', '01024031861', '01024027320', '01024026986',
        '01024026718', '01024024291', '01024024254', '01024018791',
        '01024015519', '01024015100', '01024014973', '01024013772',
        '01024006152', '01024005527', '01024005261', '01024005071',
        '01024004304', '01024001867', '01024001030', '01023007396',
        '01023003478', '01022012542', '01022007183', '01022005104',
        '01022003523', '01022000557', '01021014529', '01021012984',
        '01021011256', '01021006573', '01021004543', '01021004460',
        '01020372837', '01020011355', '01020010688', '01020004741',
        '01019088968', '01019087377', '01019087273', '01019086825',
        '01019086745', '01019086696', '01019086435', '01019086377',
        '01019086180', '01019085724', '01019085685', '01019085654',
        '01019085339', '01019085191', '01019084345', '01019084181',
        '01019083879', '01019083623', '01019083180', '01019082789',
        '01019082762', '01019082703', '01019082511', '01019082465',
        '01019082209', '01019081811', '01019081804', '01019081627',
        '01019080992', '01019080938', '01019080909', '01019080865',
        '01019079981', '01019079947', '01019079805', '01019079245',
        '01019079143', '01019078751', '01019078573', '01019077888',
        '01019077369', '01019077216', '01019077047', '01019076559',
        '01019076482', '01019076254', '01019076087', '01019075961',
        '01019075616', '01019075574', '01019074795', '01019073860',
        '01019073517', '01019073512', '01019073426', '01019073177',
        '01019073069', '01019072872', '01019072577', '01019072212',
        '01019071811', '01019071752', '01019071185', '01019071030',
        '01019070664', '01019070313', '01019070204', '01019069810',
        '01019069289', '01019068754', '01019068432', '01019067511',
        '01019066308', '01019065758', '01019065612', '01019065295',
        '01019065182', '01019063842', '01019063652', '01019062480',
        '01019062276', '01019062020', '01019061955', '01019061892',
        '01019061810', '01019061651', '01019060329', '01019058173',
        '01019058139', '01019057565', '01019056959', '01019054399',
        '01019053708', '01019053137', '01019048735', '01019047222',
        '01019043721', '01019032812', '01019032525', '01019032235',
        '01019030521', '01019030297', '01019030270', '01019025656',
        '01019021149', '01019017302', '01019015516', '01019015184',
        '01019005419', '01019001960', '01019000432', '01018005753',
        '01018003926', '01018002303', '01018002132', '01017924355',
        '01017057462', '01017056482', '01017056223', '01017055681',
        '01017055005', '01017054338', '01017054188', '01017054127',
        '01017054056', '01017053733', '01017053579', '01017053003',
        '01017052891', '01017052863', '01017052793', '01017052281',
        '01017052225', '01017051841', '01017051289', '01017051200',
        '01017051199', '01017050055', '01017049464', '01017048876',
        '01017048772', '01017048377', '01017048282', '01017048038',
        '01017047807', '01017047262', '01017047012', '01017046696',
        '01017045426', '01017045045', '01017044975', '01017044431',
        '01017044284', '01017043561', '01017042007', '01017041828',
        '01017041660', '01017041545', '01017041481', '01017040412',
        '01017039791', '01017039410', '01017037619', '01017035177',
        '01017033524', '01017032808', '01017031538', '01017031359',
        '01017028346', '01017023987', '01017023484', '01017023431',
        '01017023232', '01017022869', '01017022852', '01017021891',
        '01017021837', '01017020641', '01017019730', '01017007459',
        '01017007341', '01016009781', '01015026245', '01015026179',
        '01015025286', '01015025283', '01015024778', '01015021194',
        '01015018355', '01015014139', '01015013962', '01015008628',
        '01015006947', '01015001546', '01014002723', '01014002222',
        '01013025442', '01013024599', '01013020296', '01013016122',
        '01013011904', '01013010038', '01013004700', '01013004681',
        '01012024709', '01012018755', '01012017786', '01012013818',
        '01012003536', '01012002658', '01011097787', '01011097771',
        '01011095767', '01011095612', '01011094719', '01011094592',
        '01011094566', '01011094247', '01011093816', '01011092778',
        '01011092745', '01011092715', '01011092319', '01011091552',
        '01011091535', '01011091193', '01011090664', '01011090357',
        '01011090001', '01011089997', '01011089852', '01011089648',
        '01011089296', '01011089070', '01011088928', '01011088887',
        '01011088773', '01011088534', '01011088517', '01011088012',
        '01011087575', '01011087544', '01011087344', '01011087224',
        '01011086802', '01011086236', '01011086163', '01011085862',
        '01011085623', '01011085623', '01011085341', '01011085207',
        '01011085174', '01011084485', '01011084241', '01011084005',
        '01011083723', '01011083698', '01011083525', '01011083236',
        '01011083152', '01011082957', '01011081118', '01011080578',
        '01011080374', '01011079916', '01011079822', '01011079581',
        '01011077154', '01011076172', '01011076012', '01011075333',
        '01011075246', '01011074011', '01011073809', '01011071888',
        '01011071508', '01011069005', '01011068775', '01011066674',
        '01011059090', '01011058610', '01011055355', '01011045505',
        '01011042503', '01011042119', '01011034006', '01011025063',
        '01011008227', '01010101010', '01010020207', '01010020058',
        '01010018047', '01010017071', '01010016356', '01010015986',
        '01010015869', '01010015831', '01010015766', '01010014793',
        '01010012444', '01010012367', '01010011956', '01010009720',
        '01010008937', '01010007369', '01010006777', '01009634679',
        '01009018737', '01009018045', '01009016277', '01009016061',
        '01009014797', '01009014576', '01009006707', '01009003529',
        '01008897265', '01008074377', '01008064980', '01008063793',
        '01008063785', '01008063717', '01008063696', '01008063684',
        '01008063667', '01008063626', '01008063585', '01008063350',
        '01008063005', '01008062945', '01008062769', '01008062605',
        '01008061310', '01008061217', '01008061105', '01008061070',
        '01008060993', '01008060917', '01008060281', '01008060160',
        '01008060018', '01008059880', '01008059828', '01008059147',
        '01008059084', '01008058956', '01008058865', '01008058773',
        '01008058735', '01008058677', '01008058503', '01008058238',
        '01008057965', '01008057679', '01008057646', '01008057279',
        '01008057042', '01008056989', '01008056811', '01008056709',
        '01008056377', '01008056352', '01008056261', '01008055622',
        '01008055621', '01008055537', '01008055002', '01008054859',
        '01008054815', '01008054793', '01008054609', '01008054493',
        '01008054475', '01008054328', '01008054203', '01008053971',
        '01008053549', '01008053542', '01008053312', '01008053029',
        '01008052610', '01008052578', '01008052136', '01008051898',
        '01008051880', '01008051321', '01008051259', '01008051206',
        '01008051083', '01008050973', '01008050785', '01008050674',
        '01008050504', '01008049985', '01008049797', '01008049590',
        '01008049265', '01008049105', '01008049019', '01008048762',
        '01008048442', '01008048279', '01008048093', '01008047786',
        '01008047373', '01008047121', '01008046890', '01008046875',
        '01008046833', '01008046811', '01008046764', '01008046326',
        '01008046204', '01008045467', '01008044971', '01008044749',
        '01008044458', '01008044292', '01008044144', '01008044129',
        '01008043772', '01008042975', '01008042565', '01008042102',
        '01008041823', '01008041305', '01008040978', '01008040856',
        '01008040088', '01008039995', '01008039674', '01008037293',
        '01008036784', '01008033842', '01008033403', '01008032614',
        '01008031393', '01008028385', '01008027258', '01008025041',
        '01008021744', '01008021718', '01008021360', '01008016660',
        '01008016544', '01008016158', '01008014727', '01008011314',
        '01008011102', '01008010567', '01008010454', '01008009211',
        '01008008879', '01008007578', '01007897103', '01007013757',
        '01007012350', '01007011430', '01007010103', '01007008032',
        '01007007868', '01007007127', '01007005089', '01006019150',
        '01006017482', '01006015905', '01006014783', '01006007281',
        '01005743116', '01005697355', '01005689732', '01005045338',
        '01005045109', '01005044346', '01005043553', '01005043416',
        '01005043348', '01005043182', '01005043164', '01005042667',
        '01005042481', '01005041961', '01005041627', '01005041135',
        '01005041028', '01005040956', '01005040898', '01005040895',
        '01005040820', '01005040668', '01005040629', '01005040575',
        '01005040270', '01005039719', '01005039176', '01005038845',
        '01005038768', '01005038548', '01005038081', '01005036982',
        '01005036913', '01005036830', '01005036534', '01005036517',
        '01005036302', '01005035783', '01005035730', '01005035698',
        '01005035473', '01005035415', '01005035366', '01005035246',
        '01005035186', '01005035090', '01005034931', '01005034666',
        '01005034581', '01005034435', '01005034402', '01005034336',
        '01005033970', '01005033736', '01005033730', '01005033592',
        '01005033590', '01005033403', '01005032018', '01005031983',
        '01005031826', '01005031360', '01005031104', '01005030487',
        '01005030443', '01005030364', '01005030292', '01005028916',
        '01005028319', '01005028020', '01005028015', '01005027920',
        '01005027791', '01005027483', '01005027259', '01005027212',
        '01005026448', '01005025614', '01005025243', '01005024760',
        '01005024749', '01005023926', '01005023436', '01005022927',
        '01005022744', '01005021593', '01005020382', '01005020381',
        '01005020380', '01005015544', '01005014091', '01005011231',
        '01005010605', '01005008186', '01005008064', '01005007618',
        '01004886365', '01004010118', '01003586903', '01003167845',
        '01003015075', '01003013821', '01003011632', '01003010600',
        '01002365789', '01002030045', '01002026883', '01002026668',
        '01002020458', '01002015304', '01002006290', '01001372896',
        '01001101288', '01001101014', '01001100527', '01001100344',
        '01001100132', '01001099729', '01001097701', '01001096590',
        '01001096203', '01001095852', '01001095806', '01001095189',
        '01001094948', '01001094678', '01001094664', '01001094617',
        '01001094464', '01001094170', '01001094117', '01001094034',
        '01001094027', '01001093702', '01001093294', '01001092559',
        '01001092481', '01001092389', '01001092375', '01001092374',
        '01001092024', '01001091796', '01001091562', '01001091260',
        '01001091193', '01001090748', '01001090525', '01001089872',
        '01001088879', '01001088823', '01001088762', '01001088526',
        '01001088209', '01001088086', '01001088060', '01001088005',
        '01001087771', '01001087243', '01001087152', '01001087134',
        '01001086612', '01001086610', '01001086399', '01001086391',
        '01001086206', '01001086129', '01001085915', '01001085686',
        '01001085400', '01001084931', '01001083იი2', '01001083649',
        '01001082967', '01001082955', '01001082613', '01001082422',
        '01001082344', '01001082206', '01001081728', '01001081391',
        '01001080588', '01001080565', '01001080227', '01001080196',
        '01001080192', '01001079970', '01001079587', '01001079370',
        '01001078942', '01001078587', '01001077908', '01001077453',
        '01001077226', '01001076911', '01001076891', '01001076273',
        '01001076242', '01001076096', '01001075945', '01001075247',
        '01001073183', '01001072295', '01001072034', '01001071740',
        '01001070379', '01001069270', '01001067675', '01001065221',
        '01001058850', '01001057616', '01001055588', '01001055507',
        '01001052715', '01001051473', '01001046793', '01001046517',
        '01001030079', '01001029125', '01001027577', '01001027424',
        '01001027276', '01001021716', '01001021713', '01001014561',
        '01001010466', '01000033933', '65427000082', '62902011116',
        '62702008292', '62602011369', '62402008545', '62209011179',
        '62011003988', '62009007631', '62009006607', '62009006204',
        '62009005453', '62009005087', '62009004692', '62009003637',
        '62009001689', '62007016903', '62007016303', '62007015943',
        '62007015469', '62007015468', '62007003450', '62006064689',
        '62006064671', '62006064600', '62006064460', '62006064356',
        '62006063551', '62006063145', '62006062592', '62006001565',
        '62006000906', '62005031080', '62005031013', '62005029536',
        '62005029535', '62004028707', '62004028133', '62004027432',
        '62004027080', '62004025702', '62004025576', '62004023585',
        '62004022425', '62004018810', '62004009780', '62004002053',
        '62003016560', '62003015398', '62003010651', '62003002110',
        '62003001425', '62002006721', '62002006495', '62002006089',
        '62002005813', '62002005072', '62002004520', '62002003768',
        '62002003433', '62002003308', '62002001913', '62002001490',
        '62002001217', '62002000929', '62002000718', '62001046095',
        '62001046018', '62001045942', '62001045905', '62001045411',
        '62001044672', '62001043429', '62001043400', '62001042715',
        '62001041919', '62001041099', '62001041099', '62001039807',
        '62001038959', '62001037185', '62001037069', '62001009511',
        '61651001445', '61501093196', '61501088771', '61501088531',
        '61501088431', '61206083393', '61206080939', '61010020389',
        '61009032307', '61009027969', '61009008599', '61009007338',
        '61008018513', '61007004235', '61006077940', '61006077793',
        '61006077684', '61006075491', '61006073740', '61006073040',
        '61006072786', '61006072559', '61006071278', '61006070547',
        '61006068644', '61006068482', '61006062784', '61006053991',
        '61006053022', '61006048838', '61005006652', '61004069214',
        '61004068348', '61004067951', '61004064679', '61004050077',
        '61004049654', '61004041378', '61004022676', '61004010560',
        '61004008050', '61003000945', '61002020483', '61002005987',
        '61001087809', '61001086813', '61001086498', '61001085905',
        '61001085093', '61001085023', '61001084794', '61001083967',
        '61001083448', '61001083036', '61001082782', '61001082599',
        '61001082501', '61001081014', '61001080646', '61001080445',
        '61001079456', '61001079024', '61001078855', '61001078286',
        '61001078171', '61001078127', '61001077157', '61001076775',
        '61001076123', '61001075766', '61001075154', '61001074699',
        '61001074310', '61001074120', '61001073044', '61001072689',
        '61001070875', '61001069083', '61001067413', '61001067259',
        '61001066870', '61001066083', '61001064491', '61001062984',
        '61001061776', '61001061262', '61001060093', '61001058690',
        '61001058421', '61001058387', '61001057571', '61001053248',
        '61001052547', '61001043989', '61001042291', '61001041083',
        '61001038042', '61001034361', '61001028274', '61001025673',
        '61001019819', '61001002456', '60901160774', '60101168128',
        '60101161624', '60003011159', '60003011046', '60003010438',
        '60003010109', '60002013532', '60002009807', '60002009529',
        '60001159057', '60001157851', '60001157396', '60001157139',
        '60001156383', '60001156216', '60001154523', '60001154389',
        '60001154389', '60001154240', '60001153089', '60001152557',
        '60001151932', '60001151898', '60001151399', '60001151224',
        '60001151024', '60001150881', '60001150057', '60001149208',
        '60001149187', '60001148512', '60001148475', '60001148125',
        '60001147667', '60001147603', '60001147558', '60001147519',
        '60001147259', '60001147148', '60001147126', '60001146999',
        '60001146853', '60001146836', '60001146771', '60001146641',
        '60001146599', '60001146557', '60001146549', '60001146515',
        '60001143911', '60001143585', '60001143470', '60001142929',
        '60001142657', '60001141689', '60001141447', '60001141026',
        '60001140467', '60001140395', '60001139869', '60001139505',
        '60001139493', '60001138783', '60001138657', '60001138635',
        '60001138196', '60001136804', '60001136797', '60001136721',
        '60001135428', '60001135021', '60001134193', '60001133903',
        '60001133885', '60001133609', '60001130548', '60001130245',
        '60001127726', '60001127539', '60001126268', '60001126262',
        '60001125247', '60001125147', '60001122826', '60001120652',
        '60001120223', '60001113521', '60001110776', '60001110754',
        '60001106779', '60001106066', '60001105242', '60001099823',
        '60001095234', '60001078664', '60001078516', '60001077708',
        '60001076816', '60001076592', '60001055001', '60001054827',
        '60001054662', '60001054429', '60001042454', '60001041911',
        '60001041315', '60001040254', '60001036654', '60001029251',
        '60001025194', '60001020786', '60001013357', '60001010812',
        '60001004952', '59901132693', '59401129112', '59301128972',
        '59101132945', '59003004474', '59001126239', '59001125437',
        '59001123691', '59001122927', '59001121870', '59001120813',
        '59001120521', '59001119761', '59001119336', '59001119153',
        '59001118123', '59001118090', '59001117674', '59001117241',
        '59001114774', '59001112610', '59001112436', '59001111874',
        '59001111796', '59001111264', '59001110777', '59001109950',
        '59001096109', '59001096108', '59001096010', '59001095648',
        '59001090036', '59001085779', '59001074498', '59001043989',
        '59001038076', '59001027867', '59001025557', '59001019132',
        '59001012250', '59001010422', '58901034690', '58276544343',
        '58099634205', '58095755084', '58001033348', '58001033016',
        '58001032207', '58001029513', '58001028346', '58001026175',
        '58001004099', '57601062574', '57501062432', '57001060640',
        '57001060395', '57001060384', '57001060243', '57001059841',
        '57001059748', '57001058177', '57001057114', '57001057007',
        '57001056956', '57001056627', '57001056465', '57001054336',
        '57001053747', '57001053466', '57001052188', '57001052188',
        '57001048932', '57001026317', '56001024377', '56001024353',
        '56001004676', '54101063961', '54001060857', '54001060754',
        '54001060574', '54001060497', '54001060186', '54001059538',
        '54001058666', '54001058556', '54001057915', '54001056196',
        '54001055548', '54001054392', '54001053592', '54001052575',
        '54001027499', '54001005911', '54001005152', '54001001857',
        '53001059964', '53001058612', '53001058522', '53001055205',
        '53001051610', '53001035184', '53001029671', '53001016431',
        '53001015277', '53001009626', '53001002383', '52001024205',
        '51001029269', '51001028554', '51001027782', '51001009074',
        '51001004032', '50201004487', '50001003352', '50001003217',
        '50001002603', '50001002468', '49308540983', '49001015724',
        '49001015356', '49001014707', '49001014597', '49001004786',
        '48001026483', '48001025827', '48001024213', '48001023912',
        '48001019239', '48001007462', '47001043431', '47001042888',
        '47001040318', '47001039777', '47001039445', '47001039444',
        '47001034364', '47001033361', '47001028675', '47001012072',
        '46001024025', '46001023759', '46001022633', '46001022628',
        '46001022447', '46001022178', '46001020140', '45001034288',
        '45001033870', '45001031869', '45001029827', '45001005515',
        '43001043155', '43001043004', '43001041044', '43001038727',
        '42031000735', '42001039862', '42001039748', '42001039653',
        '42001039586', '42001038884', '42001038697', '42001037998',
        '42001037661', '42001037494', '42001037175', '42001036602',
        '42001036406', '42001035692', '42001033613', '42001032922',
        '42001029621', '41501032755', '41450000476', '41001030633',
        '41001030608', '41001030463', '41001029608', '41001028705',
        '41001028704', '41001028611', '41001027919', '41001026935',
        '41001026880', '41001003564', '40950000127', '40501040647',
        '40301040653', '40001039377', '40001039191', '40001037631',
        '40001037590', '40001031300', '40001030656', '40001009928',
        '40001005870', '40001001626', '39001044279', '39001042210',
        '39001041190', '39001040453', '39001040332', '39001040216',
        '39001039940', '39001037115', '39001010461', '39001007048',
        '39001002390', '38001048125', '38001048107', '38001047795',
        '38001047758', '38001047099', '38001046863', '38001045600',
        '38001044368', '38001044105', '38001042507', '38001010105',
        '37101060431', '37001059519', '37001059456', '37001056274',
        '37001055667', '37001054510', '37001054498', '37001053447',
        '37001052797', '37001001076', '36601057445', '36001116947',
        '36001053306', '36001052353', '36001052037', '36001051722',
        '36001051607', '36001050319', '36001049995', '36001049842',
        '36001046932', '36001045998', '36001045934', '36001039892',
        '36001022581', '36001012174', '35801131130', '35701130029',
        '35701129695', '35401130733', '35201133452', '35201129114',
        '35001128606', '35001128225', '35001127508', '35001126586',
        '35001125897', '35001125825', '35001125287', '35001124744',
        '35001123712', '35001122858', '35001122797', '35001121877',
        '35001121581', '35001120286', '35001120043', '35001119483',
        '35001119291', '35001119118', '35001119098', '35001118809',
        '35001118457', '35001118296', '35001117389', '35001116826',
        '35001116228', '35001115095', '35001115081', '35001114310',
        '35001113632', '35001113010', '35001112830', '35001112534',
        '35001112267', '35001107723', '35001105794', '35001105756',
        '35001105589', '35001104989', '35001104079', '35001103726',
        '35001096421', '35001089681', '35001089678', '35001088214',
        '35001085234', '35001077046', '35001076960', '35001075895',
        '35001062209', '35001057813', '35001055095', '35001052688',
        '35001049970', '35001049939', '35001046630', '35001043786',
        '35001039334', '35001037172', '35001034955', '35001031393',
        '35001030050', '35001024890', '35001002839', '35001001547',
        '33401084031', '33001082028', '33001081775', '33001080590',
        '33001080224', '33001079980', '33001079795', '33001079657',
        '33001079606', '33001079473', '33001079241', '33001079046',
        '33001078712', '33001078387', '33001077626', '33001076600',
        '33001075880', '33001075618', '33001075226', '33001075162',
        '33001074987', '33001074796', '33001074706', '33001074705',
        '33001074460', '33001074455', '33001074315', '33001074023',
        '33001073927', '33001073819', '33001073629', '33001069080',
        '33001068221', '33001067583', '33001067348', '33001061701',
        '33001058538', '33001058000', '33001054140', '33001034618',
        '33001026187', '33001026071', '33001025605', '33001017421',
        '33001011488', '33001010662', '31801058204', '31001057642',
        '31001049720', '31001040497', '31001036851', '30001009695',
        '30001003811', '29801042543', '29101041540', '29001037315',
        '29001035220', '29001032648', '29001030486', '29001013256',
        '29001007661', '29001004968', '29001003723', '28201119096',
        '28001116010', '28001112736', '28001107070', '27001007556',
        '27001007282', '26001038041', '26001036526', '26001035485',
        '26001034686', '26001034629', '26001032873', '26001031887',
        '26001029284', '26001015090', '25401050346', '25001050145',
        '25001043252', '25001037676', '25001014427', '25001001945',
        '24001049653', '24001047240', '24001046814', '24001044340',
        '24001044045', '24001043972', '24001043814', '24001043475',
        '24001042699', '24001028626', '24001011333', '23001000505',
        '22001024121', '22001022696', '21347602981', '21001042081',
        '21001040177', '21001038839', '21001036026', '21001035024',
        '20001067585', '20001066489', '20001066212', '20001065823',
        '20001065110', '20001065070', '20001064886', '20001064663',
        '20001064408', '20001062069', '20001061851', '20001061562',
        '20001057593', '20001047054', '20001031799', '20001019208',
        '20001018682', '20001013576', '20001010955', '20001003734',
        '19301112707', '19101114628', '19001111160', '19001110773',
        '19001108969', '19001108242', '19001108228', '19001107639',
        '19001106821', '19001105163', '19001102021', '19001101569',
        '19001101051', '19001100602', '19001095546', '19001091843',
        '19001083650', '19001083121', '19001078500', '19001070155',
        '19001061073', '19001060952', '19001032035', '19001028681',
        '19001028405', '19001024245', '19001019331', '19001013376',
        '19001004529', '19000110066', '18501075183', '18101073358',
        '18001072876', '18001071573', '18001071405', '18001070907',
        '18001070489', '18001070164', '18001069612', '18001068842',
        '18001068341', '18001067816', '18001065175', '18001064468',
        '18001062763', '18001062208', '18001059304', '18001058170',
        '18001051707', '18001051353', '18001050016', '18001009225',
        '17001031912', '17001031587', '17001031370', '17001029861',
        '16001031230', '16001030897', '16001030754', '16001029584',
        '16001029579', '16001014050', '16001001393', '15001026450',
        '15001026351', '15001025684', '15001025200', '14001026964',
        '14001026761', '14001026138', '14001010863', '14001006241',
        '14001004403', '13350000603', '13001363523', '13001068326',
        '13001068002', '13001065772', '13001064592', '13001064592',
        '13001064565', '13001064141', '13001063067', '13001063001',
        '13001062505', '13001060765', '13001060609', '13001048419',
        '13001026941', '13001005393', '13001002731', '12401101781',
        '12001099610', '12001097399', '12001094682', '12001092636',
        '12001091244', '12001063039', '12001037379', '11001031797',
        '11001031704', '11001030408', '11001030042', '11001030007',
        '11001029930', '11001029848', '11001029278', '11001026786',
        '11001012792', '11001009790', '11001008453', '11001005754',
        '10001063241', '10001060861', '10001043468', '10001030767',
        '10001008714', '01224092330', '01005040575',
      ];

      $user_ids = $user_storage->getQuery()
        ->condition('field_personal_id', $user_govids, 'IN')
        ->execute();

      $users = $user_storage->loadMultiple($user_ids);

      $alreadyUsedIds = [];

      foreach ($users as $user) {
        if (in_array($user->get('field_personal_id')->value, $alreadyUsedIds)) {
          print_r($user->get('field_personal_id')->value);
          print(' ');
        }
        else {
          $alreadyUsedIds[] = $user->get('field_personal_id')->value;
          $queue->createItem([
            'uid' => $user->id(),
            'special_uid' => 14,
            'amount' => '2066',
          ]);
        }
      }
    }
    catch (InvalidPluginDefinitionException $e) {
      $this->loggerFactory->get('girchi_users')->error($e->getMessage());
    }
    catch (PluginNotFoundException $e) {
      $this->loggerFactory->get('girchi_users')->error($e->getMessage());
    }

  }

  /**
   * Test special transactions.
   *
   * @command girchi_users:test-special-transactions
   * @aliases test-special-transactions
   */
  public  function testSpecialTransactions() {
    try {
      $ged_transactions_storage = $this->entityTypeManager->getStorage('ged_transaction');
      $new_transaction_ja_ids = $ged_transactions_storage->getQuery()
        ->condition('created', (time() - (60 * 60)), '>')
        ->condition('transaction_type', '1370')
        ->execute();

      $japata_return_ids = $ged_transactions_storage->getQuery()
        ->condition('created', (time() - (60 * 60)), '>')
        ->condition('transaction_type', '2007')
        ->execute();

      $new_transaction_ja = $ged_transactions_storage->loadMultiple($new_transaction_ja_ids);
      $japara_return = $ged_transactions_storage->loadMultiple($japata_return_ids);

      $charicxva = 0;
      $ukugatareba = 0;

      foreach ($new_transaction_ja as $tran) {
        $amount = $tran->get('ged_amount')->value;
        $charicxva = $charicxva + $amount;
      }
      foreach ($japara_return as $tran2) {
        $amount = $tran2->get('ged_amount')->value;
        $ukugatareba = $ukugatareba + $amount;
      }
      print($charicxva);
      print (' ');
      print($ukugatareba);
      exit;
    }
    catch (InvalidPluginDefinitionException $e) {
      $this->loggerFactory->get('girchi_users')->error($e->getMessage());
    }
    catch (PluginNotFoundException $e) {
      $this->loggerFactory->get('girchi_users')->error($e->getMessage());
    }

  }

}
