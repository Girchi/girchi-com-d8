<?php

/**
 * @file
 * Contains girchi_utils.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\user\Entity\User;

/**
 * Implements hook_help().
 */
function girchi_utils_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the girchi_utils module.
    case 'help.page.girchi_utils':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Contains custom extensions and overrides for Girchi project.') . '</p>';
      return $output;

    default:
  }
}

function girchi_utils_entity_form_display_alter(&$form_display, $context) {

  if ($context['entity_type'] == 'user' && $context['form_mode'] == 'register') {

    /** @var \Drupal\Core\Session\AccountProxy $user */
    $user = \Drupal::currentUser();

    if ($user->hasPermission('access supporters registration')) {
      $storage = \Drupal::service('entity_type.manager')
        ->getStorage('entity_form_display');

      $form_display = $storage->loadUnchanged('user.user.supporters_registration');

    }
  }
}


/**
 * Implements hook_theme().
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 *
 * @return array
 */
function girchi_utils_theme($existing, $type, $theme, $path) {
  $templates = [
    'supporter_registration' => [
      'variables' =>
        [
          'form' => NULL,
        ],
      'template' => 'supporter_registration',
      'render element' => 'form',
    ],
      'top_topics' => [
      'variables' =>
        [
            'slider_topics' => NULL,
            'bottom_topics' => NULL
        ],
      'template' => 'top_topics',
//      'render element' => 'block',
    ],
      'categories_block' => [
          'variables' =>
              [
                  'categories' => NULL,
              ],
          'template' => 'categories_block',
      ],

      'top_videos' => [
          'variables' =>
            [
                'top_videos' => NULL,
            ],
          'template' => 'top_videos',

    ],
  ];

  return $templates;
}


function girchi_utils_form_alter(&$form, FormStateInterface $form_state, $form_id) {


  if ($form_id == "user_register_form") {

      $currentUser = Drupal::currentUser()->getRoles();
      if( reset($currentUser) == "anonymous") {

          unset($form['account']['mail']['#title']);
          unset($form['account']['mail']['#description']);


          $form['account']['mail']['#attributes']['class'][] = 'form-control form-control-lg fix';
          $form['account']['mail']['#attributes']['id'][] = 'email';
          $form['account']['mail']['#attributes']['placeholder'][] = t('Enter Email');

          unset($form['field_referral']['widget'][0]['target_id']['#title']);
          unset($form['field_referral']['widget'][0]['target_id']['#description']);
          unset($form['field_referral']['widget']['#title']);
          unset($form['field_referral']['widget']['#description']);



          $form['field_referral']['widget'][0]['target_id']['#attributes']['class'][] = 'form-control form-control-lg fix';
          $form['field_referral']['widget'][0]['target_id']['#attributes']['id'][] = 'referral';
          $form['field_referral']['widget'][0]['target_id']['#attributes']['placeholder'][] = 'მიუთითეთ Referral-ი';

          $form['actions']['submit']['#attributes']['class'][] = 'btn btn-lg btn-block btn-warning text-uppercase mt-4 fix';
          $form['#after_build'][] = 'girchi_utils_after_build';

      }
      if ($form_state->getFormObject()->getFormDisplay($form_state)->getMode()
          === 'supporters_registration') {
          $form['field_referral']['widget']['#access'] = false;

          $form['field_referral']['widget'][0]['target_id']['#default_value'] = User::load(Drupal::currentUser()->id());
          $form['#after_build'][] = 'girchi_utils_after_build';

      }
  }


  if($form_id == "user_login_form"){
      unset($form['name']['#title']);
      unset($form['name']['#description']);
      unset($form['pass']['#title']);
      unset($form['pass']['#description']);

      $form['name']['#attributes']['class'][] = 'form-control form-control-lg fix';
      $form['name']['#attributes']['id'][] = 'email';
      $form['name']['#attributes']['placeholder'][] = t('Enter Email');

      $form['pass']['#attributes']['class'][] = 'form-control form-control-lg fix';
      $form['pass']['#attributes']['id'][] = 'password';
      $form['pass']['#attributes']['placeholder'][] = t('Enter password');

      $form['actions']['submit']['#attributes']['class'][] = 'btn btn-lg btn-block btn-success text-uppercase mt-4 fix';
  }


}

function girchi_utils_after_build($form, &$form_state) {
  if ($form_state->getFormObject()->getFormDisplay($form_state)->getMode()
    === 'supporters_registration') {

    $form['field_date_of_birth']['widget'][0]['value']['date']['#attributes']['class'][] = 'form-control form-control-lg fix';
  }

  unset($form['account']['pass']['pass1']['#title']);
  unset($form['account']['pass']['#attached']['drupalSettings']['password']['showStrengthIndicator']);

  $form['account']['pass']['pass1']['#attributes']['class'][] = 'form-control form-control-lg fix';
  $form['account']['pass']['pass1']['#attributes']['id'][] = 'password';
  $form['account']['pass']['pass1']['#attributes']['placeholder'][] = t('Enter password');


  unset($form['account']['pass']['pass2']['#title']);
  $form['account']['pass']['pass2']['#attributes']['class'][] = 'form-control form-control-lg fix';
  $form['account']['pass']['pass2']['#attributes']['id'][] = 'password2';
  $form['account']['pass']['pass2']['#attributes']['placeholder'][] = t('Enter password');


  return $form;
}